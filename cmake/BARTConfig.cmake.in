# Copyright 2018. Damien Nguyen <damien.nguyen@alumni.epfl.ch>
# All rights reserved. Use of this source code is governed by
# a BSD-style license which can be found in the LICENSE file.
# \author Damien Nguyen <damien.nguyen@alumni.epfl.ch>

@PACKAGE_INIT@

set(BART_ENABLE_MEM_CFL @BART_ENABLE_MEM_CFL@)
set(BART_FPIC @BART_FPIC@)
set(BART_FFTWTHREADS @BART_FFTWTHREADS@)
set(BART_DISABLE_PNG @BART_DISABLE_PNG@)
set(BART_ISMRMRD @BART_ISMRMRD@)
set(BART_LOCAL_FFTW @BART_LOCAL_FFTW@)
set(BART_LOG_BACKEND @BART_LOG_BACKEND@)
set(BART_LOG_SIEMENS_BACKEND @BART_LOG_SIEMENS_BACKEND@)
set(BART_LOG_ORCHESTRA_BACKEND @BART_LOG_ORCHESTRA_BACKEND@)
set(BART_LOG_GADGETRON_BACKEND @BART_LOG_GADGETRON_BACKEND@)
set(BART_NO_LAPACKE @BART_NO_LAPACKE@)
set(BART_MATLAB @BART_MATLAB@)
set(BART_MEMONLY_CFL @BART_MEMONLY_CFL@)
set(BART_USE_CUDA @USE_CUDA@)
set(BART_USE_NATIVE_CUDA @BART_USE_NATIVE_CUDA@)
set(BART_USE_OPENMP @USE_OPENMP@)
set(BART_REDEFINE_PRINTF_FOR_TRACE @BART_REDEFINE_PRINTF_FOR_TRACE@)

set(BART_LINALG_VENDOR "@LINALG_VENDOR@")
set(LINALG_VENDOR "@LINALG_VENDOR@")

# ------------------------------------------------------------------------------

get_filename_component(BART_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

list(INSERT CMAKE_MODULE_PATH 0 ${BART_CMAKE_DIR})

include(CMakeFindDependencyMacro)

include(${BART_CMAKE_DIR}/BARTFindBLASlib.cmake)

if(BART_ISMRMRD)
  find_dependency(ISMRMRD)
endif()

if(NOT BART_LOCAL_FFTW)
  if(CMAKE_VERSION VERSION_LESS 3.9)
    find_package(FFTW 3 REQUIRED COMPONENTS FFTWF FFTWF_MT)
  else()
    find_dependency(FFTW 3 COMPONENTS FFTWF FFTWF_MT)
  endif()
else()
  find_dependency(Threads)
endif()

if(NOT BART_DISABLE_PNG)
  find_dependency(PNG)
  if(CMAKE_VERSION VERSION_LESS 3.5)
    add_library(PNG::PNG SHARED IMPORTED GLOBAL)
    set_target_properties(PNG::PNG
      PROPERTIES
      IMPORTED_LOCATION "${PNG_LIBRARY}"
      INTERFACE_DEFINITIONS "${PNG_DEFINITIONS}"
      INTERFACE_INCLUDE_DIRECTORIES "${PNG_INCLUDE_DIRS}"
      INTERFACE_LINK_LIBRARIES "${PNG_LIBRARIES}"
      )
  endif()
endif()

if(BART_USE_OPENMP)
  if(CMAKE_VERSION VERSION_LESS 3.11)
    # Actually CMake 3.9 should be enough for OpenMP::OpenMP support,
    # however, until CMake 3.11 we might get problems with the
    # INTERFACE_COMPILE_OPTIONS property if we are compiling with
    # CMake's native CUDA compilation
    find_package(BOpenMP REQUIRED) # BOpenMP is FindOpenMP.cmake from 3.12
  else()
    find_package(OpenMP REQUIRED)
  endif()
endif()

if(BART_USE_NATIVE_CUDA)
  find_dependency(CUDAlibs COMPONENTS CUBLAS CUFFT)
endif()

list(REMOVE_AT CMAKE_MODULE_PATH 0)

# ==============================================================================

set_and_check(BARTTargetForEmbedding "${BART_CMAKE_DIR}/BARTTargetsForEmbedding.cmake")
include(${BARTTargetForEmbedding})

set(BARTTargetGeneral "${BART_CMAKE_DIR}/BARTTargets.cmake")
if(NOT TARGET BART::BART AND EXISTS ${BARTTargetGeneral})
  include(${BARTTargetGeneral})
endif()

# ==============================================================================

